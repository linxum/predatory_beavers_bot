import csv
from telebot import types
import os
from keyboard import keys_admin, keys_menu, key_cancel


def get_name(text):
    first_space = text.find(" ")
    if first_space != -1:
        end_pos = text.find("\n", first_space)
        if end_pos != -1:
            name = text[first_space + 1:end_pos]
            return name
    return ""


def get(message, bot):
    count = 0
    with open('resources/resume.csv', "r", encoding="utf-8") as file:
        reader = csv.DictReader(file)
        for row in reader:
            count += 1
            msg = "–ò–º—è: {name}\n–ò–≥—Ä–∞: {game}\n–†–∞–Ω–≥: {rang}\n–ü–æ—á–µ–º—É?: {why}\nURL: {url}".format(name=row["name"],
                                                                                 game=row["game"],
                                                                                 rang=row['rang'],
                                                                                 why=row["why"],
                                                                                 url=row['url'])
            key_resume = types.InlineKeyboardMarkup()
            key_resume.add(types.InlineKeyboardButton(text="Y", callback_data="resume_yes"))
            key_resume.add(types.InlineKeyboardButton(text="N", callback_data="resume_no"))
            bot.send_message(message.chat.id, msg, reply_markup=key_resume)
        if count == 0:
            bot.send_message(message.chat.id, "–ù–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–µ—Ç")


def add_resume(message, bot):
    name = bot.send_message(message.chat.id, "–î–æ—Ä–æ–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚ù§Ô∏è‚Äçüî•\n\n–ú—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø–æ–∏—Å–∫–µ —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ —Å—Ä–µ–¥–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –í–ì–£. –ï—Å–ª–∏ —Ç—ã –≥–æ—Ç–æ–≤ –∫ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è–º –∏ —Ö–æ—á–µ—à—å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—à –∫–ª—É–± –≤ –º–∏—Ä–µ –∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç–∞, —Ç–æ —Å–∫–æ—Ä–µ–µ –∑–∞–ø–æ–ª–Ω—è–π —Ñ–æ—Ä–º—É, –ø—Ä–æ—Ö–æ–¥–∏ –æ—Ç–±–æ—Ä –∏ —Å—Ç–∞–Ω–æ–≤–∏—Å—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã!\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏ —Å–≤–æ—ë –ø–æ–ª–Ω–æ–µ –§–ò–û, –∫—É—Ä—Å –∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç", reply_markup=key_cancel)
    bot.register_next_step_handler(name, add_game, bot)


def add_game(message, bot):
    game = bot.send_message(message.chat.id, "–£–∫–∞–∂–∏ –æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –≤—ã—Å—Ç—É–ø–∞–µ—à—å", reply_markup=key_cancel)
    bot.register_next_step_handler(game, add_rang, bot, message.text)


def add_rang(message, bot, name):
    rang = bot.send_message(message.chat.id, "–£–∫–∞–∂–∏ —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π —Ä–∞–Ω–≥, –ª–∏–±–æ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä–æ–≤–æ–π –∫–∞–±–∏–Ω–µ—Ç", reply_markup=key_cancel)
    bot.register_next_step_handler(rang, add_why, bot, name, message.text)

def add_why(message, bot, name, game):
    why = bot.send_message(message.chat.id, "–†–∞—Å—Å–∫–∞–∂–∏ –ø–∞—Ä—É —Å–ª–æ–≤ –æ —Å–µ–±–µ –∏ —Å–≤–æ—ë–º –∏–≥—Ä–æ–≤–æ–º –æ–ø—ã—Ç–µ. –ü–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞–º?", reply_markup=key_cancel)
    bot.register_next_step_handler(why, add_url, bot, name, game, message.text)


def add_url(message, bot, name, game, rang):
    url = bot.send_message(message.chat.id, "–£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É —Å–æ —Å–≤–æ–∏–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏", reply_markup=key_cancel)
    bot.register_next_step_handler(url, add, bot, name, game, rang, message.text)


def add(message, bot, name, game, rang, why):
    resume = {'name': name, 'game': game, 'rang': rang, 'why': why, 'url': message.text}
    with open("resources/resume.csv", "a", newline='\n', encoding='utf-8') as file:
        writer = csv.DictWriter(file, ['name', 'game', 'rang', 'why', 'url'])
        writer.writerow(resume)
    bot.send_message(message.chat.id, "–¢–≤–æ—è –∑–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º ‚ù§Ô∏è‚Äçüî•\n\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º! –°–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Ç—Å—è", reply_markup=keys_menu)


def remove(name):
    with open('resources/resume.csv', 'r', encoding='utf-8') as infile, open('resources/resume_edit.csv', 'w+', newline='', encoding='utf-8') as outfile:
        reader = csv.reader(infile)
        writer = csv.writer(outfile)

        header = next(reader)
        writer.writerow(header)

        for row in reader:
            if row[0] != name:
                writer.writerow(row)

    os.replace('resources/resume_edit.csv', 'resources/resume.csv')
